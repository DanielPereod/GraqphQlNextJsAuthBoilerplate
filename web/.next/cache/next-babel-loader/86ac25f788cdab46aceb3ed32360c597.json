{"ast":null,"code":"import _regeneratorRuntime from \"/mnt/c/Users/Daniel/Code/Projects/GraqphQlNextJsAuthBoilerplate/web/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/c/Users/Daniel/Code/Projects/GraqphQlNextJsAuthBoilerplate/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/mnt/c/Users/Daniel/Code/Projects/GraqphQlNextJsAuthBoilerplate/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/c/Users/Daniel/Code/Projects/GraqphQlNextJsAuthBoilerplate/web/components/GoogleLoginButton.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport { useRegisterMutation } from \"../graphql/generated\";\nimport { GoogleIcon } from \"../styles/icons\";\nexport var GoogleLoginButton = function GoogleLoginButton(props) {\n  _s();\n\n  var _useRegisterMutation = useRegisterMutation(),\n      _useRegisterMutation2 = _slicedToArray(_useRegisterMutation, 2),\n      fetching = _useRegisterMutation2[0].fetching,\n      register = _useRegisterMutation2[1];\n\n  var responseGoogle = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return register({\n                email: response.profileObj.email,\n                username: response.profileObj.givenName,\n                password: null\n              });\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 6]]);\n    }));\n\n    return function responseGoogle(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(GoogleLogin, {\n    clientId: process.env.GOOGLE_CLIENT_ID,\n    buttonText: \"Login\",\n    onSuccess: responseGoogle,\n    onFailure: responseGoogle,\n    cookiePolicy: \"single_host_origin\",\n    render: function render(renderProps) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        onClick: renderProps.onClick,\n        disabled: renderProps.disabled,\n        size: \"xl\",\n        w: \"100%\",\n        variant: \"whiteWithBorder\",\n        leftIcon: /*#__PURE__*/_jsxDEV(GoogleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, _this),\n        children: [console.log(), \"Inicia sesi\\xF3n con Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(GoogleLoginButton, \"Fpy0yKt5YU/ZtTJE/CW2nuxdzDA=\", false, function () {\n  return [useRegisterMutation];\n});\n\n_c = GoogleLoginButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleLoginButton\");","map":{"version":3,"sources":["/mnt/c/Users/Daniel/Code/Projects/GraqphQlNextJsAuthBoilerplate/web/components/GoogleLoginButton.tsx"],"names":["Button","React","GoogleLogin","useRegisterMutation","GoogleIcon","GoogleLoginButton","props","fetching","register","responseGoogle","response","email","profileObj","username","givenName","password","process","env","GOOGLE_CLIENT_ID","renderProps","onClick","disabled","console","log"],"mappings":";;;;;;;;;AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAIA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAkB;AAAA;;AAAA,6BAChBH,mBAAmB,EADH;AAAA;AAAA,MACxCI,QADwC,4BACxCA,QADwC;AAAA,MAC5BC,QAD4B;;AAGjD,MAAMC,cAAc;AAAA,wEAAG,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAENF,QAAQ,CAAC;AACpBG,gBAAAA,KAAK,EAAED,QAAQ,CAACE,UAAT,CAAoBD,KADP;AAEpBE,gBAAAA,QAAQ,EAAEH,QAAQ,CAACE,UAAT,CAAoBE,SAFV;AAGpBC,gBAAAA,QAAQ,EAAE;AAHU,eAAD,CAFF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdN,cAAc;AAAA;AAAA;AAAA,KAApB;;AAWA,sBACE,QAAC,WAAD;AACE,IAAA,QAAQ,EAAEO,OAAO,CAACC,GAAR,CAAYC,gBADxB;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,SAAS,EAAET,cAHb;AAIE,IAAA,SAAS,EAAEA,cAJb;AAKE,IAAA,YAAY,EAAE,oBALhB;AAME,IAAA,MAAM,EAAE,gBAACU,WAAD;AAAA,0BACN,QAAC,MAAD;AACE,QAAA,OAAO,EAAEA,WAAW,CAACC,OADvB;AAEE,QAAA,QAAQ,EAAED,WAAW,CAACE,QAFxB;AAGE,QAAA,IAAI,EAAC,IAHP;AAIE,QAAA,CAAC,EAAC,MAJJ;AAKE,QAAA,OAAO,EAAC,iBALV;AAME,QAAA,QAAQ,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,iBANZ;AAAA,mBAQGC,OAAO,CAACC,GAAR,EARH;AAAA;AAAA;AAAA;AAAA;AAAA,eADM;AAAA;AANV;AAAA;AAAA;AAAA;AAAA,WADF;AAsBD,CApCM;;GAAMlB,iB;UACsBF,mB;;;KADtBE,iB","sourcesContent":["import { Button } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { useRegisterMutation } from \"../graphql/generated\";\r\nimport { GoogleIcon } from \"../styles/icons\";\r\n\r\ninterface Props {}\r\n\r\nexport const GoogleLoginButton = (props: Props) => {\r\n  const [{ fetching }, register] = useRegisterMutation();\r\n\r\n  const responseGoogle = async (response) => {\r\n    try {\r\n      return await register({\r\n        email: response.profileObj.email,\r\n        username: response.profileObj.givenName,\r\n        password: null,\r\n      });\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n  return (\r\n    <GoogleLogin\r\n      clientId={process.env.GOOGLE_CLIENT_ID}\r\n      buttonText=\"Login\"\r\n      onSuccess={responseGoogle}\r\n      onFailure={responseGoogle}\r\n      cookiePolicy={\"single_host_origin\"}\r\n      render={(renderProps) => (\r\n        <Button\r\n          onClick={renderProps.onClick}\r\n          disabled={renderProps.disabled}\r\n          size=\"xl\"\r\n          w=\"100%\"\r\n          variant=\"whiteWithBorder\"\r\n          leftIcon={<GoogleIcon />}\r\n        >\r\n          {console.log()}\r\n          Inicia sesi√≥n con Google\r\n        </Button>\r\n      )}\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}