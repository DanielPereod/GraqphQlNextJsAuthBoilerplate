{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/pages/register.tsx\";\nimport { Box, Button, Flex, Heading } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React from \"react\";\nimport { FormInput, FormInputPassword } from \"../components/FormInput\";\nimport { validateEmail, validatePassword, validateUsername } from \"../components/validations/validateUsername\";\nimport { useRegisterMutation } from \"../graphql/generated\";\nimport { formBreakPoints } from \"../styles/breakpoints\";\nimport { clientOptions } from \"../utils/createClient\";\n\nconst Register = props => {\n  const [{\n    fetching\n  }, register] = useRegisterMutation();\n\n  const sendData = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    h: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      w: \"100%\",\n      h: \"100%\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: \"\",\n          email: \"\",\n          password: \"\",\n          repeat_password: \"\"\n        },\n        onSubmit: (values, {\n          setSubmitting\n        }) => {\n          console.log(values);\n          /* register(); */\n        },\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Box, {\n          w: formBreakPoints,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            bgImage: \"url('/images/auhtscreen.jpg')\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Heading, {\n            mb: \"1em\",\n            children: \"Registro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FormInput, {\n              name: \"username\",\n              type: \"text\",\n              label: \"Usuario\",\n              placeholder: \"Inserta tu usuario\",\n              required: true,\n              validation: validateUsername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n              name: \"email\",\n              type: \"text\",\n              label: \"Email\",\n              placeholder: \"Inserta tu email\",\n              required: true,\n              validation: validateEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormInputPassword, {\n              name: \"password\",\n              type: \"password\",\n              label: \"Contrase\\xF1a\",\n              placeholder: \"Inserta tu contrase\\xF1a\",\n              required: true,\n              validation: validatePassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormInputPassword, {\n              name: \"repeat_password\",\n              type: \"password\",\n              label: \"Reptetir contrase\\xF1a\",\n              placeholder: \"Repite tu contrase\\xF1a\",\n              required: true,\n              validation: () => validateUsername()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              mt: 4,\n              colorScheme: \"teal\",\n              isLoading: isSubmitting,\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withUrqlClient(clientOptions, {\n  ssr: false\n})(Register);","map":{"version":3,"sources":["/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/pages/register.tsx"],"names":["Box","Button","Flex","Heading","Form","Formik","withUrqlClient","React","FormInput","FormInputPassword","validateEmail","validatePassword","validateUsername","useRegisterMutation","formBreakPoints","clientOptions","Register","props","fetching","register","sendData","username","email","password","repeat_password","values","setSubmitting","console","log","isSubmitting","ssr"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,OAA5B,QAA2C,kBAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA4C,QAA5C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,yBAA7C;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,gBAHF,QAIO,4CAJP;AAKA,SAASC,mBAAT,QAAoC,sBAApC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAWA,MAAMC,QAAQ,GAAIC,KAAD,IAAkB;AACjC,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAeC,QAAf,IAA2BN,mBAAmB,EAApD;;AACA,QAAMO,QAAQ,GAAG,MAAM,CAAE,CAAzB;;AACA,sBACE,QAAC,GAAD;AAAK,IAAA,CAAC,EAAC,OAAP;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,CAAC,EAAC,MAAR;AAAe,MAAA,CAAC,EAAC,MAAjB;AAAwB,MAAA,cAAc,EAAC,QAAvC;AAAgD,MAAA,UAAU,EAAC,QAA3D;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,aAAa,EAAE;AACbC,UAAAA,QAAQ,EAAE,EADG;AAEbC,UAAAA,KAAK,EAAE,EAFM;AAGbC,UAAAA,QAAQ,EAAE,EAHG;AAIbC,UAAAA,eAAe,EAAE;AAJJ,SADjB;AAOE,QAAA,QAAQ,EAAE,CACRC,MADQ,EAER;AAAEC,UAAAA;AAAF,SAFQ,KAGL;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA;AACD,SAbH;AAAA,kBAeG,CAAC;AAAEI,UAAAA;AAAF,SAAD,kBACC,QAAC,GAAD;AAAK,UAAA,CAAC,EAAEf,eAAR;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,OAAO,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,OAAD;AAAS,YAAA,EAAE,EAAC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,IAAD;AAAA,oCACE,QAAC,SAAD;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,KAAK,EAAC,SAHR;AAIE,cAAA,WAAW,EAAC,oBAJd;AAKE,cAAA,QAAQ,EAAE,IALZ;AAME,cAAA,UAAU,EAAEF;AANd;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE,QAAC,SAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,KAAK,EAAC,OAHR;AAIE,cAAA,WAAW,EAAC,kBAJd;AAKE,cAAA,QAAQ,EAAE,IALZ;AAME,cAAA,UAAU,EAAEF;AANd;AAAA;AAAA;AAAA;AAAA,oBAVF,eAkBE,QAAC,iBAAD;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,KAAK,EAAC,eAHR;AAIE,cAAA,WAAW,EAAC,0BAJd;AAKE,cAAA,QAAQ,EAAE,IALZ;AAME,cAAA,UAAU,EAAEC;AANd;AAAA;AAAA;AAAA;AAAA,oBAlBF,eA2BE,QAAC,iBAAD;AACE,cAAA,IAAI,EAAC,iBADP;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,KAAK,EAAC,wBAHR;AAIE,cAAA,WAAW,EAAC,yBAJd;AAKE,cAAA,QAAQ,EAAE,IALZ;AAME,cAAA,UAAU,EAAE,MAAMC,gBAAgB;AANpC;AAAA;AAAA;AAAA;AAAA,oBA3BF,eAoCE,QAAC,MAAD;AACE,cAAA,EAAE,EAAE,CADN;AAEE,cAAA,WAAW,EAAC,MAFd;AAGE,cAAA,SAAS,EAAEiB,YAHb;AAIE,cAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyED,CA5ED;;AA8EA,eAAevB,cAAc,CAACS,aAAD,EAAgB;AAAEe,EAAAA,GAAG,EAAE;AAAP,CAAhB,CAAd,CAA8Cd,QAA9C,CAAf","sourcesContent":["import { Box, Button, Flex, Heading } from \"@chakra-ui/react\";\r\nimport { Form, Formik, FormikHelpers } from \"formik\";\r\nimport { withUrqlClient } from \"next-urql\";\r\nimport React from \"react\";\r\nimport { FormInput, FormInputPassword } from \"../components/FormInput\";\r\nimport {\r\n  validateEmail,\r\n  validatePassword,\r\n  validateUsername,\r\n} from \"../components/validations/validateUsername\";\r\nimport { useRegisterMutation } from \"../graphql/generated\";\r\nimport { formBreakPoints } from \"../styles/breakpoints\";\r\nimport { clientOptions } from \"../utils/createClient\";\r\n\r\ninterface Props {}\r\n\r\ninterface RegisterValues {\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n  repeat_password: string;\r\n}\r\n\r\nconst Register = (props: Props) => {\r\n  const [{ fetching }, register] = useRegisterMutation();\r\n  const sendData = () => {};\r\n  return (\r\n    <Box h=\"100vh\">\r\n      <Flex w=\"100%\" h=\"100%\" justifyContent=\"center\" alignItems=\"center\">\r\n        <Formik\r\n          initialValues={{\r\n            username: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            repeat_password: \"\",\r\n          }}\r\n          onSubmit={(\r\n            values: RegisterValues,\r\n            { setSubmitting }: FormikHelpers<RegisterValues>\r\n          ) => {\r\n            console.log(values);\r\n            /* register(); */\r\n          }}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Box w={formBreakPoints}>\r\n              <Box bgImage=\"url('/images/auhtscreen.jpg')\"></Box>\r\n              <Heading mb=\"1em\">Registro</Heading>\r\n              <Form>\r\n                <FormInput\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  label=\"Usuario\"\r\n                  placeholder=\"Inserta tu usuario\"\r\n                  required={true}\r\n                  validation={validateUsername}\r\n                />\r\n\r\n                <FormInput\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  label=\"Email\"\r\n                  placeholder=\"Inserta tu email\"\r\n                  required={true}\r\n                  validation={validateEmail}\r\n                />\r\n                <FormInputPassword\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  label=\"Contraseña\"\r\n                  placeholder=\"Inserta tu contraseña\"\r\n                  required={true}\r\n                  validation={validatePassword}\r\n                />\r\n\r\n                <FormInputPassword\r\n                  name=\"repeat_password\"\r\n                  type=\"password\"\r\n                  label=\"Reptetir contraseña\"\r\n                  placeholder=\"Repite tu contraseña\"\r\n                  required={true}\r\n                  validation={() => validateUsername()}\r\n                />\r\n\r\n                <Button\r\n                  mt={4}\r\n                  colorScheme=\"teal\"\r\n                  isLoading={isSubmitting}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Box>\r\n          )}\r\n        </Formik>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withUrqlClient(clientOptions, { ssr: false })(Register);\r\n"]},"metadata":{},"sourceType":"module"}