{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/pages/register.tsx\";\nimport { Box, Button } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React from \"react\";\nimport { FormInput, FormInputPassword } from \"../components/FormInput\";\nimport { AuthFormLayout } from \"../components/layouts/authFormLayout\";\nimport { validateEmail, validatePassword, validateUsername } from \"../components/validations/validateUsername\";\nimport { useRegisterMutation } from \"../graphql/generated\";\nimport { clientOptions } from \"../utils/createClient\";\n\nconst Register = props => {\n  const [{\n    fetching\n  }, register] = useRegisterMutation();\n\n  const sendData = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    h: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        repeat_password: \"\"\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        console.log(values);\n        /* register(); */\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(AuthFormLayout, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            name: \"username\",\n            type: \"text\",\n            label: \"Usuario\",\n            placeholder: \"Inserta tu usuario\",\n            required: true,\n            validation: validateUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            name: \"email\",\n            type: \"text\",\n            label: \"Email\",\n            placeholder: \"Inserta tu email\",\n            required: true,\n            validation: validateEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormInputPassword, {\n            name: \"password\",\n            type: \"password\",\n            label: \"Contrase\\xF1a\",\n            placeholder: \"Inserta tu contrase\\xF1a\",\n            required: true,\n            validation: validatePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormInputPassword, {\n            name: \"repeat_password\",\n            type: \"password\",\n            label: \"Reptetir contrase\\xF1a\",\n            placeholder: \"Repite tu contrase\\xF1a\",\n            required: true,\n            validation: () => validateUsername()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            colorScheme: \"teal\",\n            isLoading: isSubmitting,\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withUrqlClient(clientOptions, {\n  ssr: false\n})(Register);","map":{"version":3,"sources":["/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/pages/register.tsx"],"names":["Box","Button","Form","Formik","withUrqlClient","React","FormInput","FormInputPassword","AuthFormLayout","validateEmail","validatePassword","validateUsername","useRegisterMutation","clientOptions","Register","props","fetching","register","sendData","username","email","password","repeat_password","values","setSubmitting","console","log","isSubmitting","ssr"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,MAAd,QAA2C,kBAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA4C,QAA5C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,yBAA7C;AACA,SAASC,cAAT,QAA+B,sCAA/B;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,gBAHF,QAIO,4CAJP;AAKA,SAASC,mBAAT,QAAoC,sBAApC;AAEA,SAASC,aAAT,QAA8B,uBAA9B;;AAWA,MAAMC,QAAQ,GAAIC,KAAD,IAAkB;AACjC,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAeC,QAAf,IAA2BL,mBAAmB,EAApD;;AACA,QAAMM,QAAQ,GAAG,MAAM,CAAE,CAAzB;;AACA,sBACE,QAAC,GAAD;AAAK,IAAA,CAAC,EAAC,OAAP;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbC,QAAAA,QAAQ,EAAE,EADG;AAEbC,QAAAA,KAAK,EAAE,EAFM;AAGbC,QAAAA,QAAQ,EAAE,EAHG;AAIbC,QAAAA,eAAe,EAAE;AAJJ,OADjB;AAOE,MAAA,QAAQ,EAAE,CACRC,MADQ,EAER;AAAEC,QAAAA;AAAF,OAFQ,KAGL;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA;AACD,OAbH;AAAA,gBAeG,CAAC;AAAEI,QAAAA;AAAF,OAAD,kBACC,QAAC,cAAD;AAAA,+BACE,QAAC,IAAD;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,EAAC,SAHR;AAIE,YAAA,WAAW,EAAC,oBAJd;AAKE,YAAA,QAAQ,EAAE,IALZ;AAME,YAAA,UAAU,EAAEhB;AANd;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,SAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,EAAC,OAHR;AAIE,YAAA,WAAW,EAAC,kBAJd;AAKE,YAAA,QAAQ,EAAE,IALZ;AAME,YAAA,UAAU,EAAEF;AANd;AAAA;AAAA;AAAA;AAAA,kBAVF,eAkBE,QAAC,iBAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,KAAK,EAAC,eAHR;AAIE,YAAA,WAAW,EAAC,0BAJd;AAKE,YAAA,QAAQ,EAAE,IALZ;AAME,YAAA,UAAU,EAAEC;AANd;AAAA;AAAA;AAAA;AAAA,kBAlBF,eA2BE,QAAC,iBAAD;AACE,YAAA,IAAI,EAAC,iBADP;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,KAAK,EAAC,wBAHR;AAIE,YAAA,WAAW,EAAC,yBAJd;AAKE,YAAA,QAAQ,EAAE,IALZ;AAME,YAAA,UAAU,EAAE,MAAMC,gBAAgB;AANpC;AAAA;AAAA;AAAA;AAAA,kBA3BF,eAoCE,QAAC,MAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,WAAW,EAAC,MAFd;AAGE,YAAA,SAAS,EAAEgB,YAHb;AAIE,YAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqED,CAxED;;AA0EA,eAAevB,cAAc,CAACS,aAAD,EAAgB;AAAEe,EAAAA,GAAG,EAAE;AAAP,CAAhB,CAAd,CAA8Cd,QAA9C,CAAf","sourcesContent":["import { Box, Button, Flex, Heading } from \"@chakra-ui/react\";\r\nimport { Form, Formik, FormikHelpers } from \"formik\";\r\nimport { withUrqlClient } from \"next-urql\";\r\nimport React from \"react\";\r\nimport { FormInput, FormInputPassword } from \"../components/FormInput\";\r\nimport { AuthFormLayout } from \"../components/layouts/authFormLayout\";\r\nimport {\r\n  validateEmail,\r\n  validatePassword,\r\n  validateUsername,\r\n} from \"../components/validations/validateUsername\";\r\nimport { useRegisterMutation } from \"../graphql/generated\";\r\nimport { formBreakPoints } from \"../styles/breakpoints\";\r\nimport { clientOptions } from \"../utils/createClient\";\r\n\r\ninterface Props {}\r\n\r\ninterface RegisterValues {\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n  repeat_password: string;\r\n}\r\n\r\nconst Register = (props: Props) => {\r\n  const [{ fetching }, register] = useRegisterMutation();\r\n  const sendData = () => {};\r\n  return (\r\n    <Box h=\"100vh\">\r\n      <Formik\r\n        initialValues={{\r\n          username: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          repeat_password: \"\",\r\n        }}\r\n        onSubmit={(\r\n          values: RegisterValues,\r\n          { setSubmitting }: FormikHelpers<RegisterValues>\r\n        ) => {\r\n          console.log(values);\r\n          /* register(); */\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <AuthFormLayout>\r\n            <Form>\r\n              <FormInput\r\n                name=\"username\"\r\n                type=\"text\"\r\n                label=\"Usuario\"\r\n                placeholder=\"Inserta tu usuario\"\r\n                required={true}\r\n                validation={validateUsername}\r\n              />\r\n\r\n              <FormInput\r\n                name=\"email\"\r\n                type=\"text\"\r\n                label=\"Email\"\r\n                placeholder=\"Inserta tu email\"\r\n                required={true}\r\n                validation={validateEmail}\r\n              />\r\n              <FormInputPassword\r\n                name=\"password\"\r\n                type=\"password\"\r\n                label=\"Contrase単a\"\r\n                placeholder=\"Inserta tu contrase単a\"\r\n                required={true}\r\n                validation={validatePassword}\r\n              />\r\n\r\n              <FormInputPassword\r\n                name=\"repeat_password\"\r\n                type=\"password\"\r\n                label=\"Reptetir contrase単a\"\r\n                placeholder=\"Repite tu contrase単a\"\r\n                required={true}\r\n                validation={() => validateUsername()}\r\n              />\r\n\r\n              <Button\r\n                mt={4}\r\n                colorScheme=\"teal\"\r\n                isLoading={isSubmitting}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </AuthFormLayout>\r\n        )}\r\n      </Formik>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withUrqlClient(clientOptions, { ssr: false })(Register);\r\n"]},"metadata":{},"sourceType":"module"}