{"ast":null,"code":"import _defineProperty from \"/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/components/FormInput.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FormControl, FormLabel, Input, FormErrorMessage } from \"@chakra-ui/react\";\nimport { Field } from \"formik\";\nimport React from \"react\";\n\nvar FormInput = function FormInput(_ref) {\n  var name = _ref.name,\n      label = _ref.label,\n      placeholder = _ref.placeholder,\n      type = _ref.type;\n  return /*#__PURE__*/_jsxDEV(Field, {\n    children: function children(_ref2) {\n      var field = _ref2.field,\n          form = _ref2.form;\n      return /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: form.errors[name] && form.touched[name],\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: name,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, field), {}, {\n          type: type,\n          id: name,\n          placeholder: placeholder\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n          children: form.errors[name]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, _this), console.log(name, label, placeholder, type, field)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = FormInput;\nexport default FormInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"sources":["/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/components/FormInput.tsx"],"names":["FormControl","FormLabel","Input","FormErrorMessage","Field","React","FormInput","name","label","placeholder","type","field","form","errors","touched","console","log"],"mappings":";;;;;;;;;;AAAA,SACEA,WADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,gBAJF,QAKO,kBALP;AAMA,SAASC,KAAT,QAAsB,QAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AASA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,KAAT,QAASA,KAAT;AAAA,MAAgBC,WAAhB,QAAgBA,WAAhB;AAAA,MAA6BC,IAA7B,QAA6BA,IAA7B;AAAA,sBAChB,QAAC,KAAD;AAAA,cACG;AAAA,UAAGC,KAAH,SAAGA,KAAH;AAAA,UAAUC,IAAV,SAAUA,IAAV;AAAA,0BACC,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEA,IAAI,CAACC,MAAL,CAAYN,IAAZ,KAAqBK,IAAI,CAACE,OAAL,CAAaP,IAAb,CAA7C;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAEA,IAApB;AAAA,oBAA2BC;AAA3B;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,KAAD,kCAAWG,KAAX;AAAkB,UAAA,IAAI,EAAED,IAAxB;AAA8B,UAAA,EAAE,EAAEH,IAAlC;AAAwC,UAAA,WAAW,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE,QAAC,gBAAD;AAAA,oBAAmBG,IAAI,CAACC,MAAL,CAAYN,IAAZ;AAAnB;AAAA;AAAA;AAAA;AAAA,iBAHF,EAIGQ,OAAO,CAACC,GAAR,CAAYT,IAAZ,EAAkBC,KAAlB,EAAyBC,WAAzB,EAAsCC,IAAtC,EAA4CC,KAA5C,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,eADD;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,WADgB;AAAA,CAAlB;;KAAML,S;AAaN,eAAeA,SAAf","sourcesContent":["import {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  FormErrorMessage,\r\n} from \"@chakra-ui/react\";\r\nimport { Field } from \"formik\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n  name: string;\r\n  label: string;\r\n  placeholder: string;\r\n  type: string;\r\n}\r\n\r\nconst FormInput = ({ name, label, placeholder, type }: Props) => (\r\n  <Field>\r\n    {({ field, form }) => (\r\n      <FormControl isInvalid={form.errors[name] && form.touched[name]}>\r\n        <FormLabel htmlFor={name}>{label}</FormLabel>\r\n        <Input {...field} type={type} id={name} placeholder={placeholder} />\r\n        <FormErrorMessage>{form.errors[name]}</FormErrorMessage>\r\n        {console.log(name, label, placeholder, type, field)}\r\n      </FormControl>\r\n    )}\r\n  </Field>\r\n);\r\n\r\nexport default FormInput;\r\n"]},"metadata":{},"sourceType":"module"}