{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/pages/register.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Button, FormControl, FormErrorMessage, FormLabel, Input } from \"@chakra-ui/react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React from \"react\";\nimport { useRegisterMutation } from \"../graphql/generated\";\nimport { clientOptions } from \"../utils/createClient\";\n\nvar Register = function Register(props) {\n  _s();\n\n  var _useRegisterMutation = useRegisterMutation(),\n      _useRegisterMutation2 = _slicedToArray(_useRegisterMutation, 2),\n      fetching = _useRegisterMutation2[0].fetching,\n      register = _useRegisterMutation2[1];\n\n  var sendData = function sendData() {};\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: function onSubmit(values, _ref) {\n        var setSubmitting = _ref.setSubmitting;\n        console.log(values);\n        /* register(); */\n      },\n      children: function children(_ref2) {\n        var errors = _ref2.errors,\n            touched = _ref2.touched,\n            isSubmitting = _ref2.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"username\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              isInvalid: errors.username && touched.username,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"username\",\n                children: \"First name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"username\",\n                placeholder: \"Username\",\n                dangerouslySetInnerHTML: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: errors.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            colorScheme: \"teal\",\n            isLoading: isSubmitting,\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Register, \"Fpy0yKt5YU/ZtTJE/CW2nuxdzDA=\", false, function () {\n  return [useRegisterMutation];\n});\n\n_c = Register;\nexport default withUrqlClient(clientOptions, {\n  ssr: false\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/pages/register.tsx"],"names":["Box","Button","FormControl","FormErrorMessage","FormLabel","Input","Formik","Form","Field","withUrqlClient","React","useRegisterMutation","clientOptions","Register","props","fetching","register","sendData","username","email","password","values","setSubmitting","console","log","errors","touched","isSubmitting","ssr"],"mappings":";;;;;;;AAAA,SACEA,GADF,EAEEC,MAFF,EAGEC,WAHF,EAIEC,gBAJF,EAKEC,SALF,EAMEC,KANF,QAOO,kBAPP;AAQA,SAASC,MAAT,EAAgCC,IAAhC,EAAsCC,KAAtC,QAAmD,QAAnD;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAUA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAkB;AAAA;;AAAA,6BACAH,mBAAmB,EADnB;AAAA;AAAA,MACxBI,QADwB,4BACxBA,QADwB;AAAA,MACZC,QADY;;AAEjC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM,CAAE,CAAzB;;AACA,sBACE,QAAC,GAAD;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbC,QAAAA,QAAQ,EAAE,EADG;AAEbC,QAAAA,KAAK,EAAE,EAFM;AAGbC,QAAAA,QAAQ,EAAE;AAHG,OADjB;AAME,MAAA,QAAQ,EAAE,kBACRC,MADQ,QAGL;AAAA,YADDC,aACC,QADDA,aACC;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA;AACD,OAZH;AAAA,gBAcG;AAAA,YAAGI,MAAH,SAAGA,MAAH;AAAA,YAAWC,OAAX,SAAWA,OAAX;AAAA,YAAoBC,YAApB,SAAoBA,YAApB;AAAA,4BACC,QAAC,IAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAA,mCACE,QAAC,WAAD;AAAa,cAAA,SAAS,EAAEF,MAAM,CAACP,QAAP,IAAmBQ,OAAO,CAACR,QAAnD;AAAA,sCACE,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,QAAC,KAAD;AACE,gBAAA,EAAE,EAAC,UADL;AAEE,gBAAA,WAAW,EAAC,UAFd;AAGE,gBAAA,uBAAuB;AAHzB;AAAA;AAAA;AAAA;AAAA,uBAFF,eAOE,QAAC,gBAAD;AAAA,0BAAmBO,MAAM,CAACP;AAA1B;AAAA;AAAA;AAAA;AAAA,uBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADF,eAYE,QAAC,MAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,WAAW,EAAC,MAFd;AAGE,YAAA,SAAS,EAAES,YAHb;AAIE,YAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD;AAAA;AAdH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AA0CD,CA7CD;;GAAMd,Q;UAC6BF,mB;;;KAD7BE,Q;AA+CN,eAAeJ,cAAc,CAACG,aAAD,EAAgB;AAAEgB,EAAAA,GAAG,EAAE;AAAP,CAAhB,CAAd,CAA8Cf,QAA9C,CAAf","sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  Input,\r\n} from \"@chakra-ui/react\";\r\nimport { Formik, FormikHelpers, Form, Field } from \"formik\";\r\nimport { withUrqlClient } from \"next-urql\";\r\nimport React from \"react\";\r\nimport { useRegisterMutation } from \"../graphql/generated\";\r\nimport { clientOptions } from \"../utils/createClient\";\r\n\r\ninterface Props {}\r\n\r\ninterface RegisterValues {\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst Register = (props: Props) => {\r\n  const [{ fetching }, register] = useRegisterMutation();\r\n  const sendData = () => {};\r\n  return (\r\n    <Box>\r\n      <Formik\r\n        initialValues={{\r\n          username: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n        }}\r\n        onSubmit={(\r\n          values: RegisterValues,\r\n          { setSubmitting }: FormikHelpers<RegisterValues>\r\n        ) => {\r\n          console.log(values);\r\n          /* register(); */\r\n        }}\r\n      >\r\n        {({ errors, touched, isSubmitting }) => (\r\n          <Form>\r\n            <Field name=\"username\">\r\n              <FormControl isInvalid={errors.username && touched.username}>\r\n                <FormLabel htmlFor=\"username\">First name</FormLabel>\r\n                <Input\r\n                  id=\"username\"\r\n                  placeholder=\"Username\"\r\n                  dangerouslySetInnerHTML\r\n                />\r\n                <FormErrorMessage>{errors.username}</FormErrorMessage>\r\n              </FormControl>\r\n            </Field>\r\n            <Button\r\n              mt={4}\r\n              colorScheme=\"teal\"\r\n              isLoading={isSubmitting}\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withUrqlClient(clientOptions, { ssr: false })(Register);\r\n"]},"metadata":{},"sourceType":"module"}