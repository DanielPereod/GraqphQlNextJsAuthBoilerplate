{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/components/validations/validateUsername.tsx\";\nexport const validateUsername = value => {\n  let error;\n\n  if (!value) {\n    error = \"El usuario es requerido\";\n  } else if (value.length < 3) {\n    error = \"El usuario debe tener al menos 3 letras\";\n  }\n\n  return error;\n};\nexport const validateEmail = value => {\n  const reg = RegExp(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g);\n  let error;\n\n  if (!value) {\n    error = \"El email es requerido\";\n  } else if (!reg.test(value)) {\n    error = \"Inserta un email correcto\";\n  }\n\n  return error;\n};\nexport const validatePassword = value => {\n  const reg = RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm);\n  let error;\n\n  if (!value) {\n    error = \"La contraseña es requerida\";\n  } else if (!reg.test(value)) {\n    error = `La contraseña debe:\\n\n    Tener una longitud de al menos 8 caracteres.\\n\n    Contenter un número.\\n\n    Contener un símbolo.\\n\n    Contener una mayúsucla.\\n\n    `;\n    error = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n  return error;\n};","map":{"version":3,"sources":["/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/components/validations/validateUsername.tsx"],"names":["validateUsername","value","error","length","validateEmail","reg","RegExp","test","validatePassword"],"mappings":";;AAAA,OAAO,MAAMA,gBAAgB,GAAIC,KAAD,IAA4B;AAC1D,MAAIC,KAAJ;;AACA,MAAI,CAACD,KAAL,EAAY;AACVC,IAAAA,KAAK,GAAG,yBAAR;AACD,GAFD,MAEO,IAAID,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AAC3BD,IAAAA,KAAK,GAAG,yCAAR;AACD;;AACD,SAAOA,KAAP;AACD,CARM;AAUP,OAAO,MAAME,aAAa,GAAIH,KAAD,IAA4B;AACvD,QAAMI,GAAG,GAAGC,MAAM,CAAC,mCAAD,CAAlB;AACA,MAAIJ,KAAJ;;AACA,MAAI,CAACD,KAAL,EAAY;AACVC,IAAAA,KAAK,GAAG,uBAAR;AACD,GAFD,MAEO,IAAI,CAACG,GAAG,CAACE,IAAJ,CAASN,KAAT,CAAL,EAAsB;AAC3BC,IAAAA,KAAK,GAAG,2BAAR;AACD;;AACD,SAAOA,KAAP;AACD,CATM;AAWP,OAAO,MAAMM,gBAAgB,GAAIP,KAAD,IAA4B;AAC1D,QAAMI,GAAG,GAAGC,MAAM,CAAC,uDAAD,CAAlB;AACA,MAAIJ,KAAJ;;AACA,MAAI,CAACD,KAAL,EAAY;AACVC,IAAAA,KAAK,GAAG,4BAAR;AACD,GAFD,MAEO,IAAI,CAACG,GAAG,CAACE,IAAJ,CAASN,KAAT,CAAL,EAAsB;AAC3BC,IAAAA,KAAK,GAAI;AACb;AACA;AACA;AACA;AACA,KALI;AAMAA,IAAAA,KAAK,gBACH;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AACD,SAAOA,KAAP;AACD,CArBM","sourcesContent":["export const validateUsername = (value?: string): String => {\r\n  let error: string;\r\n  if (!value) {\r\n    error = \"El usuario es requerido\";\r\n  } else if (value.length < 3) {\r\n    error = \"El usuario debe tener al menos 3 letras\";\r\n  }\r\n  return error;\r\n};\r\n\r\nexport const validateEmail = (value?: string): String => {\r\n  const reg = RegExp(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g);\r\n  let error: string;\r\n  if (!value) {\r\n    error = \"El email es requerido\";\r\n  } else if (!reg.test(value)) {\r\n    error = \"Inserta un email correcto\";\r\n  }\r\n  return error;\r\n};\r\n\r\nexport const validatePassword = (value?: string): String => {\r\n  const reg = RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm);\r\n  let error: any;\r\n  if (!value) {\r\n    error = \"La contraseña es requerida\";\r\n  } else if (!reg.test(value)) {\r\n    error = `La contraseña debe:\\n\r\n    Tener una longitud de al menos 8 caracteres.\\n\r\n    Contenter un número.\\n\r\n    Contener un símbolo.\\n\r\n    Contener una mayúsucla.\\n\r\n    `;\r\n    error = (\r\n      <ul>\r\n        <li>hello</li>\r\n        <li>hello</li>\r\n        <li>hello</li>\r\n      </ul>\r\n    );\r\n  }\r\n  return error;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}