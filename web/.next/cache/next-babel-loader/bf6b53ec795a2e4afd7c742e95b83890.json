{"ast":null,"code":"import _defineProperty from \"/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/components/FormInput.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FormControl, FormLabel, Input, FormErrorMessage, InputGroup, Button, Icon, InputRightElement } from \"@chakra-ui/react\";\nimport { Field } from \"formik\";\nimport React, { useState } from \"react\";\nexport var FormInput = function FormInput(_ref) {\n  var name = _ref.name,\n      label = _ref.label,\n      placeholder = _ref.placeholder,\n      type = _ref.type;\n  return /*#__PURE__*/_jsxDEV(Field, {\n    name: name,\n    children: function children(_ref2) {\n      var field = _ref2.field,\n          form = _ref2.form;\n      return /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: form.errors[name] && form.touched[name],\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: name,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, field), {}, {\n          type: type,\n          id: name,\n          placeholder: placeholder\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n          children: form.errors[name]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, _this);\n};\n_c = FormInput;\nexport var FormInputPassword = function FormInputPassword(_ref3) {\n  _s();\n\n  var name = _ref3.name,\n      label = _ref3.label,\n      placeholder = _ref3.placeholder,\n      type = _ref3.type;\n\n  var _useState = useState(false),\n      showPassword = _useState[0],\n      handlePasswordVisibility = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(InputGroup, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: showPassword ? \"text\" : \"password\",\n      placeholder: \"*******\",\n      size: \"lg\",\n      onChange: function onChange(event) {\n        return setPassword(event.currentTarget.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n      width: \"3rem\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        h: \"1.5rem\",\n        size: \"sm\",\n        onClick: handlePasswordVisibility,\n        children: showPassword ? /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"view-off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 27\n        }, _this) : /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 54\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FormInputPassword, \"Ijkxi/P9Exud2ZpvtdovkfqAqCk=\");\n\n_c2 = FormInputPassword;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormInput\");\n$RefreshReg$(_c2, \"FormInputPassword\");","map":{"version":3,"sources":["/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/components/FormInput.tsx"],"names":["FormControl","FormLabel","Input","FormErrorMessage","InputGroup","Button","Icon","InputRightElement","Field","React","useState","FormInput","name","label","placeholder","type","field","form","errors","touched","FormInputPassword","showPassword","handlePasswordVisibility","event","setPassword","currentTarget","value"],"mappings":";;;;;;;;;;;AAAA,SACEA,WADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,gBAJF,EAKEC,UALF,EAMEC,MANF,EAOEC,IAPF,EAQEC,iBARF,QASO,kBATP;AAUA,SAASC,KAAT,QAAsB,QAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AASA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,KAAT,QAASA,KAAT;AAAA,MAAgBC,WAAhB,QAAgBA,WAAhB;AAAA,MAA6BC,IAA7B,QAA6BA,IAA7B;AAAA,sBACvB,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEH,IAAb;AAAA,cACG;AAAA,UAAGI,KAAH,SAAGA,KAAH;AAAA,UAAUC,IAAV,SAAUA,IAAV;AAAA,0BACC,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEA,IAAI,CAACC,MAAL,CAAYN,IAAZ,KAAqBK,IAAI,CAACE,OAAL,CAAaP,IAAb,CAA7C;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAEA,IAApB;AAAA,oBAA2BC;AAA3B;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,KAAD,kCAAWG,KAAX;AAAkB,UAAA,IAAI,EAAED,IAAxB;AAA8B,UAAA,EAAE,EAAEH,IAAlC;AAAwC,UAAA,WAAW,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE,QAAC,gBAAD;AAAA,oBAAmBG,IAAI,CAACC,MAAL,CAAYN,IAAZ;AAAnB;AAAA;AAAA;AAAA;AAAA,iBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,eADD;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,WADuB;AAAA,CAAlB;KAAMD,S;AAYb,OAAO,IAAMS,iBAAiB,GAAG,SAApBA,iBAAoB,QAKpB;AAAA;;AAAA,MAJXR,IAIW,SAJXA,IAIW;AAAA,MAHXC,KAGW,SAHXA,KAGW;AAAA,MAFXC,WAEW,SAFXA,WAEW;AAAA,MADXC,IACW,SADXA,IACW;;AAAA,kBACsCL,QAAQ,CAAC,KAAD,CAD9C;AAAA,MACJW,YADI;AAAA,MACUC,wBADV;;AAEX,sBACE,QAAC,UAAD;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAED,YAAY,GAAG,MAAH,GAAY,UADhC;AAEE,MAAA,WAAW,EAAC,SAFd;AAGE,MAAA,IAAI,EAAC,IAHP;AAIE,MAAA,QAAQ,EAAE,kBAACE,KAAD;AAAA,eAAWC,WAAW,CAACD,KAAK,CAACE,aAAN,CAAoBC,KAArB,CAAtB;AAAA;AAJZ;AAAA;AAAA;AAAA;AAAA,aADF,eAOE,QAAC,iBAAD;AAAmB,MAAA,KAAK,EAAC,MAAzB;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,CAAC,EAAC,QAAV;AAAmB,QAAA,IAAI,EAAC,IAAxB;AAA6B,QAAA,OAAO,EAAEJ,wBAAtC;AAAA,kBACGD,YAAY,gBAAG,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,iBAAH,gBAA8B,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AAD7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CAtBM;;GAAMD,iB;;MAAAA,iB","sourcesContent":["import {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  FormErrorMessage,\r\n  InputGroup,\r\n  Button,\r\n  Icon,\r\n  InputRightElement,\r\n} from \"@chakra-ui/react\";\r\nimport { Field } from \"formik\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface Props {\r\n  name: string;\r\n  label: string;\r\n  placeholder: string;\r\n  type: string;\r\n}\r\n\r\nexport const FormInput = ({ name, label, placeholder, type }: Props) => (\r\n  <Field name={name}>\r\n    {({ field, form }) => (\r\n      <FormControl isInvalid={form.errors[name] && form.touched[name]}>\r\n        <FormLabel htmlFor={name}>{label}</FormLabel>\r\n        <Input {...field} type={type} id={name} placeholder={placeholder} />\r\n        <FormErrorMessage>{form.errors[name]}</FormErrorMessage>\r\n      </FormControl>\r\n    )}\r\n  </Field>\r\n);\r\n\r\nexport const FormInputPassword = ({\r\n  name,\r\n  label,\r\n  placeholder,\r\n  type,\r\n}: Props) => {\r\n  const [showPassword, handlePasswordVisibility] = useState(false);\r\n  return (\r\n    <InputGroup>\r\n      <Input\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        placeholder=\"*******\"\r\n        size=\"lg\"\r\n        onChange={(event) => setPassword(event.currentTarget.value)}\r\n      />\r\n      <InputRightElement width=\"3rem\">\r\n        <Button h=\"1.5rem\" size=\"sm\" onClick={handlePasswordVisibility}>\r\n          {showPassword ? <Icon name=\"view-off\" /> : <Icon name=\"view\" />}\r\n        </Button>\r\n      </InputRightElement>\r\n    </InputGroup>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}