{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/pages/register.tsx\";\nimport { Box, Button } from \"@chakra-ui/react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React from \"react\";\nimport { useRegisterMutation } from \"../graphql/generated\";\nimport { clientOptions } from \"../utils/createClient\";\n\nconst Register = props => {\n  const [{\n    fetching\n  }, register] = useRegisterMutation();\n\n  const sendData = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        console.log(values);\n        /* register(); */\n      },\n      children: ({\n        errors,\n        touched,\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          colorScheme: \"teal\",\n          isLoading: isSubmitting,\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withUrqlClient(clientOptions, {\n  ssr: false\n})(Register);","map":{"version":3,"sources":["/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/pages/register.tsx"],"names":["Box","Button","Formik","Form","Field","withUrqlClient","React","useRegisterMutation","clientOptions","Register","props","fetching","register","sendData","username","email","password","values","setSubmitting","console","log","errors","touched","isSubmitting","ssr"],"mappings":";;AAAA,SACEA,GADF,EAEEC,MAFF,QAOO,kBAPP;AAQA,SAASC,MAAT,EAAgCC,IAAhC,EAAsCC,KAAtC,QAAmD,QAAnD;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAUA,MAAMC,QAAQ,GAAIC,KAAD,IAAkB;AACjC,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAeC,QAAf,IAA2BL,mBAAmB,EAApD;;AACA,QAAMM,QAAQ,GAAG,MAAM,CAAE,CAAzB;;AACA,sBACE,QAAC,GAAD;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbC,QAAAA,QAAQ,EAAE,EADG;AAEbC,QAAAA,KAAK,EAAE,EAFM;AAGbC,QAAAA,QAAQ,EAAE;AAHG,OADjB;AAME,MAAA,QAAQ,EAAE,CACRC,MADQ,EAER;AAAEC,QAAAA;AAAF,OAFQ,KAGL;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA;AACD,OAZH;AAAA,gBAcG,CAAC;AAAEI,QAAAA,MAAF;AAAUC,QAAAA,OAAV;AAAmBC,QAAAA;AAAnB,OAAD,kBACC,QAAC,IAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,MAAD;AACE,UAAA,EAAE,EAAE,CADN;AAEE,UAAA,WAAW,EAAC,MAFd;AAGE,UAAA,SAAS,EAAEA,YAHb;AAIE,UAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAzCD;;AA2CA,eAAelB,cAAc,CAACG,aAAD,EAAgB;AAAEgB,EAAAA,GAAG,EAAE;AAAP,CAAhB,CAAd,CAA8Cf,QAA9C,CAAf","sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  Input,\r\n} from \"@chakra-ui/react\";\r\nimport { Formik, FormikHelpers, Form, Field } from \"formik\";\r\nimport { withUrqlClient } from \"next-urql\";\r\nimport React from \"react\";\r\nimport { useRegisterMutation } from \"../graphql/generated\";\r\nimport { clientOptions } from \"../utils/createClient\";\r\n\r\ninterface Props {}\r\n\r\ninterface RegisterValues {\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst Register = (props: Props) => {\r\n  const [{ fetching }, register] = useRegisterMutation();\r\n  const sendData = () => {};\r\n  return (\r\n    <Box>\r\n      <Formik\r\n        initialValues={{\r\n          username: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n        }}\r\n        onSubmit={(\r\n          values: RegisterValues,\r\n          { setSubmitting }: FormikHelpers<RegisterValues>\r\n        ) => {\r\n          console.log(values);\r\n          /* register(); */\r\n        }}\r\n      >\r\n        {({ errors, touched, isSubmitting }) => (\r\n          <Form>\r\n            <Field name=\"username\">\r\n              {/*      <FormControl isInvalid={errors.username && touched.username}>\r\n                <FormLabel htmlFor=\"username\">First name</FormLabel>\r\n                <Input id=\"username\" placeholder=\"Username\" />\r\n                <FormErrorMessage>{errors.username}</FormErrorMessage>\r\n              </FormControl> */}\r\n            </Field>\r\n            <Button\r\n              mt={4}\r\n              colorScheme=\"teal\"\r\n              isLoading={isSubmitting}\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withUrqlClient(clientOptions, { ssr: false })(Register);\r\n"]},"metadata":{},"sourceType":"module"}