{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/pages/register.tsx\";\nimport { Box, Button, Text, Link } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React from \"react\";\nimport { FormInput, FormInputPassword } from \"../components/FormInput\";\nimport { AuthFormLayout } from \"../components/layouts/authFormLayout\";\nimport { validateEmail, validatePassword, validateUsername } from \"../components/validations/validateUsername\";\nimport { useRegisterMutation } from \"../graphql/generated\";\nimport { clientOptions } from \"../utils/createClient\";\n\nconst Register = props => {\n  const [{\n    fetching\n  }, register] = useRegisterMutation();\n\n  const sendData = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      repeat_password: \"\"\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      console.log(values);\n      /* register(); */\n    },\n    children: ({\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(AuthFormLayout, {\n      title: \"Registro\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"username\",\n          type: \"text\",\n          label: \"Usuario\",\n          placeholder: \"Inserta tu usuario\",\n          required: true,\n          validation: validateUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"text\",\n          label: \"Email\",\n          placeholder: \"Inserta tu email\",\n          required: true,\n          validation: validateEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormInputPassword, {\n          name: \"password\",\n          type: \"password\",\n          label: \"Contrase\\xF1a\",\n          placeholder: \"Inserta tu contrase\\xF1a\",\n          required: true,\n          validation: validatePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormInputPassword, {\n          name: \"repeat_password\",\n          type: \"password\",\n          label: \"Reptetir contrase\\xF1a\",\n          placeholder: \"Repite tu contrase\\xF1a\",\n          required: true,\n          validation: () => validateUsername()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          w: \"100%\",\n          textAlign: \"right\",\n          mb: \"1em\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              variant: \"smallText\",\n              children: \"Olvidaste tu contrase\\xF1a?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          isFullWidth: true,\n          colorScheme: \"teal\",\n          isLoading: isSubmitting,\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withUrqlClient(clientOptions, {\n  ssr: false\n})(Register);","map":{"version":3,"sources":["/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/pages/register.tsx"],"names":["Box","Button","Text","Link","Form","Formik","withUrqlClient","React","FormInput","FormInputPassword","AuthFormLayout","validateEmail","validatePassword","validateUsername","useRegisterMutation","clientOptions","Register","props","fetching","register","sendData","username","email","password","repeat_password","values","setSubmitting","console","log","isSubmitting","ssr"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, Text, Link } from \"@chakra-ui/react\";\r\nimport { Form, Formik, FormikHelpers } from \"formik\";\r\nimport { withUrqlClient } from \"next-urql\";\r\nimport React from \"react\";\r\nimport { FormInput, FormInputPassword } from \"../components/FormInput\";\r\nimport { AuthFormLayout } from \"../components/layouts/authFormLayout\";\r\nimport {\r\n  validateEmail,\r\n  validatePassword,\r\n  validateUsername,\r\n} from \"../components/validations/validateUsername\";\r\nimport { useRegisterMutation } from \"../graphql/generated\";\r\nimport { formBreakPoints } from \"../styles/breakpoints\";\r\nimport { clientOptions } from \"../utils/createClient\";\r\n\r\ninterface Props {}\r\n\r\ninterface RegisterValues {\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n  repeat_password: string;\r\n}\r\n\r\nconst Register = (props: Props) => {\r\n  const [{ fetching }, register] = useRegisterMutation();\r\n  const sendData = () => {};\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        repeat_password: \"\",\r\n      }}\r\n      onSubmit={(\r\n        values: RegisterValues,\r\n        { setSubmitting }: FormikHelpers<RegisterValues>\r\n      ) => {\r\n        console.log(values);\r\n        /* register(); */\r\n      }}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <AuthFormLayout title=\"Registro\">\r\n          <Form>\r\n            <FormInput\r\n              name=\"username\"\r\n              type=\"text\"\r\n              label=\"Usuario\"\r\n              placeholder=\"Inserta tu usuario\"\r\n              required={true}\r\n              validation={validateUsername}\r\n            />\r\n\r\n            <FormInput\r\n              name=\"email\"\r\n              type=\"text\"\r\n              label=\"Email\"\r\n              placeholder=\"Inserta tu email\"\r\n              required={true}\r\n              validation={validateEmail}\r\n            />\r\n            <FormInputPassword\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Contrase単a\"\r\n              placeholder=\"Inserta tu contrase単a\"\r\n              required={true}\r\n              validation={validatePassword}\r\n            />\r\n\r\n            <FormInputPassword\r\n              name=\"repeat_password\"\r\n              type=\"password\"\r\n              label=\"Reptetir contrase単a\"\r\n              placeholder=\"Repite tu contrase単a\"\r\n              required={true}\r\n              validation={() => validateUsername()}\r\n            />\r\n            <Box w=\"100%\" textAlign=\"right\" mb=\"1em\">\r\n              <Link>\r\n                <Text variant=\"smallText\">Olvidaste tu contrase単a?</Text>\r\n              </Link>\r\n            </Box>\r\n\r\n            <Button\r\n              mt={4}\r\n              isFullWidth\r\n              colorScheme=\"teal\"\r\n              isLoading={isSubmitting}\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </AuthFormLayout>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default withUrqlClient(clientOptions, { ssr: false })(Register);\r\n"]},"metadata":{},"sourceType":"module"}