{"ast":null,"code":"import _defineProperty from \"/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/components/FormInput.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FormControl, FormLabel, Input, FormErrorMessage, InputGroup, Button, Icon, InputRightElement, Box } from \"@chakra-ui/react\";\nimport { Field } from \"formik\";\nimport React, { useState } from \"react\";\nimport { ViewOffIcon } from \"@chakra-ui/icons\";\n\nvar validateUsername = function validateUsername(value) {\n  var error;\n\n  if (!value) {\n    error = \"Username is required\";\n  } else if (value !== \"Naruto\") {\n    error = \"Jeez! You're not a fan ðŸ˜±\";\n  }\n\n  return error;\n};\n\nvar FormWrapper = function FormWrapper(_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mb: \"1em\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 39\n  }, _this);\n};\n\n_c = FormWrapper;\nexport var FormInput = function FormInput(_ref2) {\n  var name = _ref2.name,\n      label = _ref2.label,\n      placeholder = _ref2.placeholder,\n      type = _ref2.type,\n      required = _ref2.required;\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Field, {\n      name: name,\n      validate: validateUsername,\n      children: function children(_ref3) {\n        var field = _ref3.field,\n            form = _ref3.form;\n        return /*#__PURE__*/_jsxDEV(FormControl, {\n          isInvalid: form.errors[name] && form.touched[name],\n          isRequired: required,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: name,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, field), {}, {\n            type: type,\n            id: name,\n            placeholder: placeholder\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n            children: form.errors[name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, _this);\n};\n_c2 = FormInput;\nexport var FormInputPassword = function FormInputPassword(_ref4) {\n  _s();\n\n  var name = _ref4.name,\n      label = _ref4.label,\n      placeholder = _ref4.placeholder,\n      type = _ref4.type,\n      required = _ref4.required;\n\n  var _useState = useState(false),\n      showPassword = _useState[0],\n      setShowPassword = _useState[1];\n\n  var handlePasswordVisibility = function handlePasswordVisibility() {\n    return setShowPassword(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Field, {\n      name: name,\n      children: function children(_ref5) {\n        var field = _ref5.field,\n            form = _ref5.form;\n        return /*#__PURE__*/_jsxDEV(FormControl, {\n          isInvalid: form.errors[name] && form.touched[name],\n          isRequired: required,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: name,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, field), {}, {\n              type: showPassword ? \"text\" : \"password\",\n              id: name,\n              placeholder: placeholder\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n              width: \"3rem\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                h: \"1.5rem\",\n                size: \"sm\",\n                onClick: handlePasswordVisibility,\n                children: showPassword ? /*#__PURE__*/_jsxDEV(Icon, {\n                  as: ViewOffIcon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, _this) : /*#__PURE__*/_jsxDEV(Icon, {\n                  as: ViewOffIcon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n            children: form.errors[name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FormInputPassword, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n\n_c3 = FormInputPassword;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FormWrapper\");\n$RefreshReg$(_c2, \"FormInput\");\n$RefreshReg$(_c3, \"FormInputPassword\");","map":{"version":3,"sources":["/mnt/c/Users/Daniel/Code/Projects/LuxSite/web/components/FormInput.tsx"],"names":["FormControl","FormLabel","Input","FormErrorMessage","InputGroup","Button","Icon","InputRightElement","Box","Field","React","useState","ViewOffIcon","validateUsername","value","error","FormWrapper","children","FormInput","name","label","placeholder","type","required","field","form","errors","touched","FormInputPassword","showPassword","setShowPassword","handlePasswordVisibility","prevState"],"mappings":"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","sourcesContent":["import {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  FormErrorMessage,\r\n  InputGroup,\r\n  Button,\r\n  Icon,\r\n  InputRightElement,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport { Field } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\r\n\r\ninterface Props {\r\n  name: string;\r\n  label: string;\r\n  placeholder: string;\r\n  type: string;\r\n  required: boolean;\r\n}\r\n\r\nconst validateUsername = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Username is required\";\r\n  } else if (value !== \"Naruto\") {\r\n    error = \"Jeez! You're not a fan ðŸ˜±\";\r\n  }\r\n  return error;\r\n};\r\n\r\nconst FormWrapper = ({ children }) => <Box mb={\"1em\"}>{children}</Box>;\r\n\r\nexport const FormInput = ({\r\n  name,\r\n  label,\r\n  placeholder,\r\n  type,\r\n  required,\r\n}: Props) => (\r\n  <FormWrapper>\r\n    <Field name={name} validate={validateUsername}>\r\n      {({ field, form }) => (\r\n        <FormControl\r\n          isInvalid={form.errors[name] && form.touched[name]}\r\n          isRequired={required}\r\n        >\r\n          <FormLabel htmlFor={name}>{label}</FormLabel>\r\n          <Input {...field} type={type} id={name} placeholder={placeholder} />\r\n          <FormErrorMessage>{form.errors[name]}</FormErrorMessage>\r\n        </FormControl>\r\n      )}\r\n    </Field>\r\n  </FormWrapper>\r\n);\r\n\r\nexport const FormInputPassword = ({\r\n  name,\r\n  label,\r\n  placeholder,\r\n  type,\r\n  required,\r\n}: Props) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handlePasswordVisibility = () =>\r\n    setShowPassword((prevState) => !prevState);\r\n  return (\r\n    <FormWrapper>\r\n      <Field name={name}>\r\n        {({ field, form }) => (\r\n          <FormControl\r\n            isInvalid={form.errors[name] && form.touched[name]}\r\n            isRequired={required}\r\n          >\r\n            <FormLabel htmlFor={name}>{label}</FormLabel>\r\n\r\n            <InputGroup>\r\n              <Input\r\n                {...field}\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                id={name}\r\n                placeholder={placeholder}\r\n              />\r\n              <InputRightElement width=\"3rem\">\r\n                <Button h=\"1.5rem\" size=\"sm\" onClick={handlePasswordVisibility}>\r\n                  {showPassword ? (\r\n                    <Icon as={ViewOffIcon} />\r\n                  ) : (\r\n                    <Icon as={ViewOffIcon} />\r\n                  )}\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n            <FormErrorMessage>{form.errors[name]}</FormErrorMessage>\r\n          </FormControl>\r\n        )}\r\n      </Field>\r\n    </FormWrapper>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}