{"ast":null,"code":"import _regeneratorRuntime from \"/mnt/c/Users/Daniel/Code/Projects/GraqphQlNextJsAuthBoilerplate/web/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/c/Users/Daniel/Code/Projects/GraqphQlNextJsAuthBoilerplate/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/mnt/c/Users/Daniel/Code/Projects/GraqphQlNextJsAuthBoilerplate/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/c/Users/Daniel/Code/Projects/GraqphQlNextJsAuthBoilerplate/web/pages/auth/login.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Button, Link, Text } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { FormInput, FormInputPassword } from \"../../components/FormInput\";\nimport { AuthFormLayout } from \"../../components/layouts/authFormLayout\";\nimport { validatePassword } from \"../../components/validations/validateUsername\";\nimport { useLoginMutation } from \"../../graphql/generated\";\nimport { clientOptions } from \"../../utils/createClient\";\n\nvar Login = function Login() {\n  _s();\n\n  var _useLoginMutation = useLoginMutation(),\n      _useLoginMutation2 = _slicedToArray(_useLoginMutation, 2),\n      fetching = _useLoginMutation2[0].fetching,\n      login = _useLoginMutation2[1];\n\n  var router = useRouter();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      usernameOrEmail: \"\",\n      password: \"\"\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n        var setSubmitting;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSubmitting = _ref.setSubmitting;\n                _context.prev = 1;\n                _context.next = 4;\n                return login({\n                  username: values.usernameOrEmail,\n                  email: values.usernameOrEmail,\n                  password: values.password\n                });\n\n              case 4:\n                router.push(\"/\");\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 7]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    children: function children(_ref3) {\n      var isSubmitting = _ref3.isSubmitting,\n          values = _ref3.values;\n      return /*#__PURE__*/_jsxDEV(AuthFormLayout, {\n        title: \"Registro\",\n        type: \"signup\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            name: \"usernameOrEmail\",\n            type: \"text\",\n            label: \"Usuario o email\",\n            placeholder: \"Inserta tu usuario o email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(FormInputPassword, {\n            name: \"password\",\n            type: \"password\",\n            label: \"Contrase\\xF1a\",\n            placeholder: \"Inserta tu contrase\\xF1a\",\n            required: true,\n            validation: validatePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            textAlign: \"right\",\n            mb: \"1em\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                variant: \"smallText\",\n                children: \"No tienes cuenta?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"xl\",\n            mt: 4,\n            isFullWidth: true,\n            isLoading: isSubmitting,\n            type: \"submit\",\n            children: \"Crear cuenta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Login, \"/bxt0DXQ7pRnj+6aZssrUlUF2XE=\", false, function () {\n  return [useLoginMutation, useRouter];\n});\n\n_c = Login;\nexport default withUrqlClient(clientOptions, {\n  ssr: false\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/mnt/c/Users/Daniel/Code/Projects/GraqphQlNextJsAuthBoilerplate/web/pages/auth/login.tsx"],"names":["Box","Button","Link","Text","Form","Formik","withUrqlClient","useRouter","React","FormInput","FormInputPassword","AuthFormLayout","validatePassword","useLoginMutation","clientOptions","Login","fetching","login","router","usernameOrEmail","password","values","setSubmitting","username","email","push","console","log","isSubmitting","ssr"],"mappings":"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","sourcesContent":["import { Box, Button, Link, Text } from \"@chakra-ui/react\";\r\nimport { Form, Formik, FormikHelpers } from \"formik\";\r\nimport { withUrqlClient } from \"next-urql\";\r\nimport { useRouter } from \"next/router\";\r\nimport React from \"react\";\r\nimport { FormInput, FormInputPassword } from \"../../components/FormInput\";\r\nimport { AuthFormLayout } from \"../../components/layouts/authFormLayout\";\r\nimport {\r\n  validateEmail,\r\n  validatePassword,\r\n  validatePasswordRepeat,\r\n  validateUsername,\r\n} from \"../../components/validations/validateUsername\";\r\nimport { useLoginMutation } from \"../../graphql/generated\";\r\nimport { clientOptions } from \"../../utils/createClient\";\r\n\r\ninterface RegisterValues {\r\n  usernameOrEmail: string;\r\n  password: string;\r\n}\r\n\r\nconst Login = () => {\r\n  const [{ fetching }, login] = useLoginMutation();\r\n  const router = useRouter();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        usernameOrEmail: \"\",\r\n        password: \"\",\r\n      }}\r\n      onSubmit={async (\r\n        values: RegisterValues,\r\n        { setSubmitting }: FormikHelpers<RegisterValues>\r\n      ) => {\r\n        try {\r\n          await login({\r\n            username: values.usernameOrEmail,\r\n            email: values.usernameOrEmail,\r\n            password: values.password,\r\n          });\r\n          router.push(\"/\");\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }}\r\n    >\r\n      {({ isSubmitting, values }) => (\r\n        <AuthFormLayout title=\"Registro\" type=\"signup\">\r\n          <Form>\r\n            <FormInput\r\n              name=\"usernameOrEmail\"\r\n              type=\"text\"\r\n              label=\"Usuario o email\"\r\n              placeholder=\"Inserta tu usuario o email\"\r\n              required={true}\r\n            />\r\n\r\n            <FormInputPassword\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Contraseña\"\r\n              placeholder=\"Inserta tu contraseña\"\r\n              required={true}\r\n              validation={validatePassword}\r\n            />\r\n\r\n            <Box w=\"100%\" textAlign=\"right\" mb=\"1em\">\r\n              <Link>\r\n                <Text variant=\"smallText\">{\"No tienes cuenta?\"}</Text>\r\n              </Link>\r\n            </Box>\r\n\r\n            <Button\r\n              size=\"xl\"\r\n              mt={4}\r\n              isFullWidth\r\n              isLoading={isSubmitting}\r\n              type=\"submit\"\r\n            >\r\n              Crear cuenta\r\n            </Button>\r\n          </Form>\r\n        </AuthFormLayout>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default withUrqlClient(clientOptions, { ssr: false })(Login);\r\n"]},"metadata":{},"sourceType":"module"}